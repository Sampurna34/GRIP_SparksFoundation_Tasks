<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0801.1333                               -->
<workbook original-version='18.1' source-build='2020.3.0 (20203.20.0801.1333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='SampleSuperstore (SampleSuperstore)' inline='true' name='federated.1bmbr5a1a2g7di1fny4a10x1d8ep' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='excel-direct.0oos2rn0n4l36u1beukst0vo32aw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/SamFiles/INTERNASHALA TRAINING/SPARKS Foundation/Task 5/SampleSuperstore.xlsx' interpretationMode='0' password='' port='0' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0oos2rn0n4l36u1beukst0vo32aw' name='SampleSuperstore' table='[SampleSuperstore$]' type='table'>
          <columns gridOrigin='A1:M9995:no:A1:M9995:0' header='yes' outcome='6'>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0oos2rn0n4l36u1beukst0vo32aw' name='SampleSuperstore' table='[SampleSuperstore$]' type='table'>
          <columns gridOrigin='A1:M9995:no:A1:M9995:0' header='yes' outcome='6'>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M9995:no:A1:M9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_DD22A2FFE55A4272ABC27D67F65BDA9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_DD22A2FFE55A4272ABC27D67F65BDA9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_DD22A2FFE55A4272ABC27D67F65BDA9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_DD22A2FFE55A4272ABC27D67F65BDA9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_DD22A2FFE55A4272ABC27D67F65BDA9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_DD22A2FFE55A4272ABC27D67F65BDA9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_DD22A2FFE55A4272ABC27D67F65BDA9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_DD22A2FFE55A4272ABC27D67F65BDA9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_DD22A2FFE55A4272ABC27D67F65BDA9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_DD22A2FFE55A4272ABC27D67F65BDA9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_DD22A2FFE55A4272ABC27D67F65BDA9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_DD22A2FFE55A4272ABC27D67F65BDA9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore_DD22A2FFE55A4272ABC27D67F65BDA9C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='SampleSuperstore' datatype='table' name='[__tableau_internal_object_id__].[SampleSuperstore_DD22A2FFE55A4272ABC27D67F65BDA9C]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SampleSuperstore' id='SampleSuperstore_DD22A2FFE55A4272ABC27D67F65BDA9C'>
            <properties context=''>
              <relation connection='excel-direct.0oos2rn0n4l36u1beukst0vo32aw' name='SampleSuperstore' table='[SampleSuperstore$]' type='table'>
                <columns gridOrigin='A1:M9995:no:A1:M9995:0' header='yes' outcome='6'>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                  <column datatype='string' name='Sub-Category' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='SampleSuperstore' inline='true' name='federated.0miluf70zscyqo11lo5gq1kmgz55' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='textscan.1wk2jet0tv1ppb1fwwy3l1moxxt1'>
            <connection class='textscan' directory='C:/SamFiles/INTERNASHALA TRAINING/SPARKS Foundation/Task 5' filename='SampleSuperstore.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1wk2jet0tv1ppb1fwwy3l1moxxt1' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1wk2jet0tv1ppb1fwwy3l1moxxt1' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Ship Mode:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#8074a8'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='nuriel_stone_10_0' type='palette'>
            <map to='#6fb899'>
              <bucket>&quot;[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;[federated.0miluf70zscyqo11lo5gq1kmgz55]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.1wk2jet0tv1ppb1fwwy3l1moxxt1' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                  <column datatype='string' name='Sub-Category' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Category wise comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Trebuchet MS'>Comparison of Sales, Avg, Discount and Profit, Category wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0miluf70zscyqo11lo5gq1kmgz55' />
          </datasources>
          <datasource-dependencies datasource='federated.0miluf70zscyqo11lo5gq1kmgz55'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Country:nk]</column>
            <column>[federated.0miluf70zscyqo11lo5gq1kmgz55].[Action (Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Category:nk]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d37295' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#606b76' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0miluf70zscyqo11lo5gq1kmgz55].[avg:Discount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk] + ([federated.0miluf70zscyqo11lo5gq1kmgz55].[avg:Discount:qk] + [federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Sales:qk]))</rows>
        <cols>([federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Category:nk] / [federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Sub-Category:nk])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Profit is mostly in the Technology category</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.046832'>
                  <node-reference>
                    <fields>
                      <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Category:nk]</field>
                      <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Sub-Category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Technology&quot;</bucket>
                      <bucket>&quot;Accessories&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-13058.179809090918'>
                  <node-reference>
                    <axis>[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Average dicount is maximum for Office Supplies mainly Binders</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.821625'>
                  <node-reference>
                    <fields>
                      <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Category:nk]</field>
                      <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Sub-Category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Office Supplies&quot;</bucket>
                      <bucket>&quot;Binders&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.34244667169516313'>
                  <node-reference>
                    <axis>[federated.0miluf70zscyqo11lo5gq1kmgz55].[avg:Discount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Tables in Furniture category is having huge loss</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.465565'>
                  <node-reference>
                    <fields>
                      <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Category:nk]</field>
                      <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Sub-Category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Furniture&quot;</bucket>
                      <bucket>&quot;Tables&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-13058.179809090918'>
                  <node-reference>
                    <axis>[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#000000'>Phones and Chaires are having the maximum sales</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.011708'>
                  <node-reference>
                    <fields>
                      <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Category:nk]</field>
                      <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Sub-Category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Office Supplies&quot;</bucket>
                      <bucket>&quot;Appliances&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='284937.90881528938'>
                  <node-reference>
                    <axis>[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Sales:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='209'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontname='Rockwell'>Few areas of concern:</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontname='Rockwell'>-Profit of Furniture abd Office Supplies are comparitively lesser</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontname='Rockwell'>-Though the sales of Furniture has been high, specially for tables still there&apos;s loss or less profit</run>
              <run fontalignment='0'>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.336777'>
                  <node-reference>
                    <fields>
                      <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Category:nk]</field>
                      <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Sub-Category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Furniture&quot;</bucket>
                      <bucket>&quot;Tables&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='58284.854209090918'>
                  <node-reference>
                    <axis>[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='144' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{9F9D7523-0977-469C-B635-47B2F69A8420}' />
    </worksheet>
    <worksheet name='Profit and Sales by shipping mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Rockwell'>Profit and Sales by shipping mode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0miluf70zscyqo11lo5gq1kmgz55' />
          </datasources>
          <datasource-dependencies datasource='federated.0miluf70zscyqo11lo5gq1kmgz55'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0miluf70zscyqo11lo5gq1kmgz55].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Ship Mode:nk]' value='41' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Region:nk] * [federated.0miluf70zscyqo11lo5gq1kmgz55].[Multiple Values])</rows>
        <cols>([federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Ship Mode:nk] / [federated.0miluf70zscyqo11lo5gq1kmgz55].[:Measure Names])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontalignment='0'>Standard class is having more Sales and Profits for all the regions</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.0726073'>
                  <node-reference>
                    <fields>
                      <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Ship Mode:nk]</field>
                      <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[:Measure Names]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Second Class&quot;</bucket>
                      <bucket>&quot;[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='542973.84012231918'>
                  <node-reference>
                    <fields>
                      <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Region:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Central&quot;</bucket>
                    </multibucket>
                    <axis>[federated.0miluf70zscyqo11lo5gq1kmgz55].[Multiple Values]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{FA575914-1A97-4D0F-8595-28E9579105CF}' />
    </worksheet>
    <worksheet name='Profit vs sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Rockwell' fontsize='18'>Regression model:</run>
            <run>Æ&#10;</run>
            <run fontname='Rockwell'>Profit=a+b*Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0miluf70zscyqo11lo5gq1kmgz55' />
          </datasources>
          <datasource-dependencies datasource='federated.0miluf70zscyqo11lo5gq1kmgz55'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.0miluf70zscyqo11lo5gq1kmgz55].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <reference-line axis-column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Sales:qk]' z-order='1' />
            <reference-line axis-column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#1b1b1b' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]</rows>
        <cols>[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Sales:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='502'>
            <formatted-text>
              <run fontname='Rockwell' fontsize='11'>-Regression equation obtained:</run>
              <run fontalignment='1'>Æ&#10;</run>
              <run bold='true' fontalignment='1' fontname='Rockwell' fontsize='11'>Profit=0.151*Sales -1221.41</run>
              <run>Æ&#10;</run>
              <run fontname='Rockwell' fontsize='11'>-We can observe that the model fit is moderatelygood, since we have a R-square vale of 0.485, indicating that 48.5% of the variability in the dependent variable is explained by the independent variable</run>
              <run>Æ&#10;</run>
              <run fontname='Rockwell' fontsize='11'>-With one unit increase in the sales there will be almost negligible increase in profit, around 0.15 times. Hence, sales strategy needs to be worked on.</run>
              <run>Æ&#10;</run>
              <run fontname='Rockwell' fontsize='11'>-Also, in case of 0 sales, there will be a loss of 1222.4</run>
              <run>Æ&#10;</run>
              <run fontname='Rockwell' fontsize='11'>-The states that are farther from the regiression line are Texas, New York, Pennsylvenia, California, Ohio, Illionois </run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='65542.021220915791'>
                  <node-reference>
                    <axis>[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Sales:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='81649.004815079534'>
                  <node-reference>
                    <axis>[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='291' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{D07BFB79-D32B-4002-84B2-F829ACC173CC}' />
    </worksheet>
    <worksheet name='Quantity vs sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Rockwell' fontsize='18'>Regression model:</run>
            <run>Æ&#10;</run>
            <run fontname='Rockwell'>Sales=a+b*Quantity</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0miluf70zscyqo11lo5gq1kmgz55' />
          </datasources>
          <datasource-dependencies datasource='federated.0miluf70zscyqo11lo5gq1kmgz55'>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane id='16' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <reference-line axis-column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Quantity:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Quantity:qk]' z-order='1' />
            <reference-line axis-column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Sales:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-color' value='#333333' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Sales:qk]</rows>
        <cols>[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Quantity:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='306'>
            <formatted-text>
              <run fontname='Rockwell'>-Regression equation obtained:</run>
              <run fontalignment='1'>Æ&#10;</run>
              <run bold='true' fontalignment='1' fontname='Rockwell'>Sales=59.55*Qty + 852.46</run>
              <run>Æ&#10;</run>
              <run fontname='Rockwell'>-We can observe that the model fit is extremely good, since we have a R-square vale of 0.965, indicating that 96.5% of the variability in the dependent variable is explained by the independent variable</run>
              <run>Æ&#10;</run>
              <run fontname='Rockwell'>-With one unit increase in the quantity(stores) there will be almost 60 times more sales. Hence, additional stores can be set up in the low profit states.</run>
              <run>Æ&#10;</run>
              <run fontname='Rockwell'>-The states that are farther from the regiression line are Texas, New York, Pennsylvenia, which is having a high superstore loss.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1260.2893985539711'>
                  <node-reference>
                    <axis>[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Quantity:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='472456.84687678685'>
                  <node-reference>
                    <axis>[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Sales:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='193' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{CA89D944-3E0D-408F-9EB6-660055C8E130}' />
    </worksheet>
    <worksheet name='State wise Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0miluf70zscyqo11lo5gq1kmgz55' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0miluf70zscyqo11lo5gq1kmgz55'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Category:nk]'>
            <groupfilter from='&quot;Furniture&quot;' function='range' level='[none:Category:nk]' to='&quot;Technology&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Segment:nk]'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Sub-Category:nk]'>
            <groupfilter from='&quot;Accessories&quot;' function='range' level='[none:Sub-Category:nk]' to='&quot;Tables&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Region:nk]</column>
            <column>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Segment:nk]</column>
            <column>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Category:nk]</column>
            <column>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Sub-Category:nk]</column>
            <column>[federated.0miluf70zscyqo11lo5gq1kmgz55].[Action (Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0miluf70zscyqo11lo5gq1kmgz55].[Longitude (generated)]' field-type='quantitative' max='-6789137.3229203373' min='-13922017.449737364' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0miluf70zscyqo11lo5gq1kmgz55].[Latitude (generated)]' field-type='quantitative' max='7189383.1884493725' min='1171568.7052223312' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]' />
              <text column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:State:nk]' />
              <lod column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Country:nk]' />
              <lod column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:State:nk]' />
              <geometry column='[federated.0miluf70zscyqo11lo5gq1kmgz55].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='206' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0miluf70zscyqo11lo5gq1kmgz55].[Latitude (generated)]</rows>
        <cols>[federated.0miluf70zscyqo11lo5gq1kmgz55].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#000000' fontname='Rockwell' fontsize='12'>The states having maximum profits are California(76,381), New York(74,039) and Washington(33403). </run>
              <run>Æ&#10;&#10;</run>
              <run fontcolor='#000000' fontname='Rockwell' fontsize='12'>Texas(-25,729), Ohio(-16,971) and Pennsylvania (-15,560) stores have faced huge loss</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontname='Rockwell' fontsize='16'>Æ </run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-7444786.797724098'>
                  <node-reference>
                    <axis>[federated.0miluf70zscyqo11lo5gq1kmgz55].[Longitude (generated)]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='3024881.1366509493'>
                  <node-reference>
                    <axis>[federated.0miluf70zscyqo11lo5gq1kmgz55].[Latitude (generated)]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
                <projection name='EPSG:3857' u='-66.877657674067848' v='26.208125827557826' />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{DBEA1969-DACF-44A1-B5DC-AAFB14828EB8}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='SampleSuperstore' name='federated.0miluf70zscyqo11lo5gq1kmgz55' />
      </datasources>
      <datasource-dependencies datasource='federated.0miluf70zscyqo11lo5gq1kmgz55'>
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='49000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='49000' id='3' param='vert' w='82400' x='800' y='1000'>
              <zone h='49000' id='5' name='State wise Profit' w='82400' x='800' y='1000'>
                <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='49000' id='6' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='13500' id='8' name='State wise Profit' param='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Segment:nk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='15875' id='9' name='State wise Profit' param='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Region:nk]' w='16000' x='83200' y='14500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='10' name='State wise Profit' pane-specification-id='0' param='[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]' w='16000' x='83200' y='30375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='49000' id='11' param='vert' w='98400' x='800' y='50000'>
            <zone h='49000' id='12' name='Category wise comparison' w='98400' x='800' y='50000'>
              <layout-cache minheight='451' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='16' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='15' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='13500' id='8' mode='checkdropdown' name='State wise Profit' param='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Segment:nk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='15875' id='9' mode='checkdropdown' name='State wise Profit' param='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Region:nk]' w='16000' x='83200' y='14500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='State wise Profit' w='82400' x='800' y='1000'>
                  <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='10' name='State wise Profit' pane-specification-id='0' param='[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]' w='16000' x='83200' y='30375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Category wise comparison' w='98400' x='800' y='50000'>
                  <layout-cache minheight='451' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C18F5689-1729-41D0-AFEE-F2E20E05F0BC}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' maximized='true' name='State wise Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Segment:nk]' type='filter' />
            <card param='[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Category:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Region:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Segment:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:State:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B84AA30-8482-440B-8272-2BF5447D23B6}' />
    </window>
    <window class='worksheet' name='Category wise comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Category:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Country:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Region:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:State:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC828212-5591-4C32-8835-E5A8796C8E29}' />
    </window>
    <window class='worksheet' name='Quantity vs sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Category:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Segment:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:State:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Sub-Category:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{82768ABB-02DD-4C1F-AED7-946F7DEF3C8F}' />
    </window>
    <window class='worksheet' name='Profit vs sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[:Measure Names]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Category:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:City:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Country:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Region:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Ship Mode:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2C7D2ED-88FD-4F2C-9457-AD8D414313C6}' />
    </window>
    <window class='worksheet' name='Profit and Sales by shipping mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0miluf70zscyqo11lo5gq1kmgz55].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[:Measure Names]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Category:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Region:nk]</field>
            <field>[federated.0miluf70zscyqo11lo5gq1kmgz55].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{523CB613-8D37-4853-B510-3757999422AA}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Category wise comparison'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State wise Profit'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D151EDAD-A18D-49DF-9B48-ED4DD455AA9A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Category wise comparison' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit and Sales by shipping mode' width='192'>
      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
      rFO8OckAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit vs sales' width='192'>
      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
      tam6HZ5PXTtAPLpIplDBZTWQLst0dvVRrpTQaN0bUg4tCEJDlkNPTk4yOjrK888/f41Ddyue
      ly5d4vXXX2f//v0888wzGybremhXQ6coCplMhrm5ORKJBDabjZ6eHvbv37+mBbkdysXr4uLr
      6MXXUbdM2xrJZJL/9//+Hz//8z/PN7/5TX7nd37nM2lee+01fu/3fo9vfvObPPjggw1t7iiK
      QjqdZm5ujmQyicPhuKG68m7OXDeU19KIUSBJkjAajTgcjlXH751OJ2+++SbpdLrh4t5wxUyo
      VVfm83nsdjvBYJB9+/bd1Yv9ZqjLB7gdJElatwlUKpUwm8133ASanJykp6eHVCqF3+/n008/
      ZXR0lBdffPGaGpVb8axWq1y8eJH+/n7sdvuGyboeWlEUSSaT6qL3er309fXhcDhuu+gb1Vzb
      KNqG2gEaZS5QuVzm5Zdfpru7G5fLxYsvvsiBAwdu+llRFMnlcgiCgN1ux263o9fr2bNnD4VC
      Abii2AaDYcvDhLW6m1odfVtbG7t27cLpdG7ryM1GoqEUoFG230gkws6dO3nppZf40z/909t+
      Vq/XMzU1pe5+uVwOnU6HwWBAq9USjUbp6upCq9UyMTHBv/t3/25TZRdFkUgkok558Hg8DA8P
      Y7FYMBgMm8p7O6KhFKBRdoBgMEg0GuXll1/mxRdfvO1nNRoNlUqFoaEhpqen2b17N2fPnkWS
      JFwuF3v37iUSiVAulzet3FsURZaWlpifn0cURQKBAPv378disahv+ru9/mitaCgfoFgsXvOl
      1YON9gF27ty5Zp7nzp3D7/fT3t6+obJeTSsIgrroJUkiEAjQ09NzSx9qO9jjd4JnQ+0AtzOB
      UqkULpeLTCaD2+3eUL7nzp0jlUrx4IMPks/nSSaT5HI5isUier0eWZYRRZFyuUxvb+9nRqv2
      7du3ofLVUCqVCIVCxONxZFkmEAjw4IMPrjlw0ESDKcDtNqN33nmH4eFhpqam6O3tJZVKEQwG
      CYfD9Pb2ksvlKBQKdHV1EQqFWFlZYffu3cTjcQ4dOnRb5SoWi8iyzBtvvIFWq6VSqVAsFqlW
      q5jNZiRJUkcJPvHEE1tWv1ObXzk/P080GkWr1dLR0cHBgwfXnDFv4lpsGwUYGBhgdHSUnp4e
      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
      /BFqIAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Quantity vs sales' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWZBU1324v9v7vnfPvjIwCzBsQkIgJCRr8SbLwZFczlKVOOWt8p68pGI/
      JFV2VcpJnHLF/jtOyS67UomkWIoiWViWtSIQIBDLDLMy+0xPT0/ve/e99/8w7hsGGJiBnqGB
      +z1BT/fpc/ue3z2//QiyLMuoqNyjaG73BFRUbie6Sg0kiiJarbYiY+XzeYxGY0XGKlMqldDp
      Vn+5Q0NDbNmypeLj3ghZlikWiwiCULExy+MC6zJuNYyp0+mu+xlRFBEEAY1m+TNf3QFU7mmq
      UgBEUbzdU6gKZFlmZGSE6elpVmuqJRIJJEla83fF4/EVvyOdTpNMJq96rVgsXvXe2dnZVc+1
      Gqjc3q2yLvT19ZHP59mzZw+SJFEoFIjFYmg0GjweD5lMBqvVSjqdJpVKYbVa8Xg8JJNJisUi
      RqORrq4uLly4gNvtJhgMks/n8Xq92O12QqEQCwsL1NXV4XK5SCQSFAoFrFYrHR0dnDlzhtra
      Wo4ePcrevXsZHh7G5/Nhs9kAiEajNDc3s7i4iNVq5cMPP+TJJ58kEAhUXDVaD6pSAK7U0+4G
      yk/l1V6bLMtcuHCBRCKB3W7nd7/7HR6PB6PRSKFQoFAokEgkmJycxG63UygUmJ2dpbW1FafT
      iSAIZLNZrFYrDQ0NvPPOO9TX1+P1esnlcszMzCDLMqOjo2zbto3JyUnm5+cplUoUi0XMZjN+
      v594PE4kEgFgamqKdDrN6dOnlbFgyV6SJIlAIIAsy3fUDiBUyg1aSSM4k8lgsVgqMlaZ220E
      S5JEKpXC4XBc932XG8GyLJPNZpXxZVlmaGiIRCLBrl27FGEoC5Uoimg0GrRaLZIkKcakwWAg
      n8+j0+kIh8MMDg5y//33o9FolPsmSRI6nQ5JkpAkCY1Gg8FgIJfLodPplN1EFEVKpRKAYlQK
      goAoisr7dDoder3+pneAjTSCq3IHuBvRaDTK03G1N1cQhKseBNu3b1/2f7PZvOLnL1y4AMC2
      bdsAOHfuHLt376a2tnbZ+zKZDCdPnqSlpYXZ2VkefPBBpqenmZqaUnYMm82G1WolkUgQDofZ
      uXMnAAaDQbme8m6VyWQ4duwYdXV1RKNR/H4/6XSa7du3k8vlGBwcRKfTYTabaW9vX9VvsV5U
      pQDcjSoQLC3WXC533UVbSQYHB9Hr9YyPj9PY2MjHH3/MpUuXcDgczM7OsnPnTkRRxO12EwqF
      mJmZYXp6mq6uLkWlMpvNzM7OAmAymThx4gRf/vKX+ad/+ie8Xi9ut5tAIMCePXv45S9/yWc/
      +1kkSeL999/nwIEDRKNRbDYbFy5cYPv27Zw4cYKLFy+SSqV44IEHVAG4FneSDrkW9Ho92Wx2
      wwTAaDSyuLhIKpUilUpRKpVIJBLU1dURj8dJpVLL5tLW1kYulyOVSiHLMrlcDkEQyOVyPPPM
      MwCMjo7y1ltv8dhjjxEKhRgfH2ffvn3Y7XYefvhhmpqauHTpEnV1dcBSTGdwcJCGhgamp6ex
      WCwUi0Wam5spFAob8jtcD9UGWIH1CoSVF91Kv1W1B8IymQzj4+N0dnai1Wo5duwYDzzwQEV3
      7Xs+EHa3qkAAFouFTCazqvfKssxvf/tbXn/9dd59911FFVkNH3/88arfm0qlOHXqFNlsVnlt
      cXERWZaZnZ3l3Llzy+bf09OjCPC+ffuU+/Xhhx8qds6ZM2cQRZHf/e53hMNh4vE46XSafD5/
      zTkkk8kV/1bm3LlzigFeKVb96Mrlsui0WqLxJE67lXxJxmzUI8syer2+opO6W1UgWBLuyz00
      K1F2g5Y9OAMDA+j1el599VX+5E/+hJMnT2I2mzl//jwdHR1MTk7y5JNPMjExQTweJ5vNsri4
      qAS4QqEQXV1dJBIJBEEgk8kQjUZ57LHHiEajRCIRLl26REtLC8PDw+h0Og4fPsyHH34IwOTk
      JGNjYzz11FMsLCwo6ozb7SaTySAIAqFQiKmpKXQ6HTU1NaTTaebn5zl27BgOhwOv18vMzAyL
      i4t85jOf4Ze//CW9vb2cOXOGpqYmDAYDBoOBoaEhtm3bxvT0tPJaMBikra2N6elp0uk0X/zi
      Fyuy7lYlALJY5PzZTwjU1pAt6kgnYxSKEgIlDBY3zQ01yLJ8UxHIayGKYsXGKrPW+ZXdgZUe
      F5Z082w2i8lkuu77tm3bRiwWY2FhAafTSX19PYIgoNfrcbvdaLVaWlpaANiyZQv5fB632w0s
      2RsGgwGLxYJGo1ECXR6PB51Oh8/nY3R0FI/Hg9vtJpfLUVdXRz6fx+fzUVNTg06no7m5Wbkf
      DocDl8tFPp+nvb1dcbkajUYEQaBYLOLz+TCZTCSTSQRBoKamBrPZrHyvwWCgoaEBk8nEjh07
      cLlctLW10dDQQDabxe/3Yzab8fl8ytwzmQx+vx+dTkdjYyOnT59Gp9Mte1DeKP5Q/tuV92pV
      NkBsYZYLA8PUNbUTWwxhsdrRCAJajYjW6KC1qU7xQVeCXC53w8WxVtZqo6zWBrhZ2yeRSKwY
      E6j0Nn83MT8/j8ViwW63L3v9RnaYJEkIgnDVrruqHcDlr+dBdwAZGZ/HhdVsIF+UMRp+L4W/
      H7hSAlDJscqUgzurRaPRrOr9ax23TPkJdqXwrMZYLRQKnD9/nj179iivRSIRPB7Pip+5ctyJ
      iQksFgt+v/+685RlmXfeeQedTsfBgwev+ffVGKyiKNLf339VHKOciqHT6chms+zYsYPjx4/j
      9/sJBoO4XC4WFhZ4+OGH0Wq1V8UwylxrcV9rnjcdCNP+XsKcjiW9S1dZtX8Zd7MNUMZsNpPJ
      ZK56kpWRZVkxIL1erxKVNRqN5PN5stkse/bsYXJykl//+tds3ryZdDqteM8KhQJjY2N87nOf
      Y2ZmhosXLxIIBJidnaW3t5fm5mbefPNNWltb6e/vp6amBlEUCYVCdHZ2smPHDn72s5/x9a9/
      nXQ6TTqdZmhoiIGBASRJwmKxEI1G8fl86HQ6zp07x5YtW7BarZw7d46DBw+STCaZm5vDYrFQ
      KBRwOBz85Cc/oaenh8bGRkZHRwmFQjzwwAOKgS+KIvF4nMHBQUwmE7lcDkmSyOVyWK3Wit+H
      qowD3AlJVLfKlekK18JgMKDVanE6nRgMBnQ6HXa7XUmGGx4exmKxUF9fj0ajwel0YjabKZVK
      eL1ebDYbDocDi8WCIAi4XC5cLhd1dXUUi0U6OjqIxWLU1NSwbds28vk8fr+f2tpaCoUCra2t
      pNNpJS+opaWFRCJBJpNRItsAxWKR1tZWZFmmoaEBSZLwer1s2bKFkydPYrFYCIVCaDQauru7
      qa+vx2q1KvaAwWDA4/GQzWaJxWJ4vV42b97M+Pg4brebRCLB+Pg4W7durfh9qMo4wHrYANUS
      B7icXC4HsOxay3EAgPHxcbRaLc3NzVd9thyoWm1QrdIFMYVCgf7+fnbs2LEhBTE3CiDeVblA
      lfYAVStGo5FEIrGisBuNRmw2G7lcjlwux4kTJ9i+fTs2mw2tVkupVGJubk7xCsHSzlIsFrFa
      rQwMDBAKhXjwwQfJ5/MUCgUEQWBqaopIJKKMv23bNv73f/+X5uZmIpEITU1NtLe3o9PpSCQS
      BINB0uk0drudqakp7r//fnQ6HV1dXRSLRQqFgnLPyro8LHmihoaGaGxsRKfTMTQ0RF3dksPE
      4/Gg1+uxWCwEg0HsdjsGg4Fisci5c+dwuVx0dXUp37te0fOqFIB7QQWC/zP2V9o9BwYGSCQS
      ipuxnLRmtVoRBIHz58/T1taG0WhElmVlnEgkwrPPPsvIyAharZb33nuPiYkJ3G4327dvR6fT
      MT8/j16vx+v1IooiPp+PdDqNVqtlZmYGURSRZZlEIkF/fz+f/exnOXXqFGazmffee49gMEgg
      EODQoUO89NJLuFwuxsbGaGtro76+nkQiwfnz59m1axcXL14kHA7j8XgYGRkhm81iNBoJh8M8
      99xzDA4OEo/H8Xg8bNq0iXg8zszMDJ988gnFYpGnn35aSb2uNKoA3GbKkeFrGcMejwePx6MY
      zKVSCb1+KfhYfmIGAgFSqZSSOTo/P08sFkOv19PZ2Ukul8NgMOB2u7FYLDidTkRRZO/evYra
      kEgksFgstLa2UiqVlNiGy+XiwoUL7N+/H61WS29vLwsLC9jtdiUOYLVa2b9/P16vF5/Ph1ar
      xe/3YzQa2bt3LyaTCVEUFaHQaDQ4HA70ej1WqxWtVovb7cbr9WI2mwkEAgQCAdrb25FlmVQq
      pRTfrAdVaQPczblA1yIej+NwOJQagMvrAcoNAm6k34qiiMFgIBqNKgbx5VxuAxSLRUWQyv8u
      FosYDAYAxTi/3v0slUpX7WCXz/HyuV8+dplwOIzVar2maqPWA9xjlF2bVxrDU1NTvPPOOzz6
      6KNoNBoWFhbwer1IkoTBYCAUCtHQ0MDk5CTBYJD29nYcDgehUEjxHqXTaWVhOBwOFhYWFC/N
      5clsw8PDtLa24nK5kCSJZDJJIpGgt7eX0dFRbDYbwWAQWZbRaDTY7XZlEWu1WiWuYbfbKZVK
      SJLEO++8wx//8R/zyiuvsHfvXjKZDDqdDo/Hw7Fjx9Dr9Tz44IPMzMwoyXUbTVUKwN2cDHct
      VjKGBwYGMJlMvPHGGzQ3N5NMJgmFQly6dIlNmzYp72lra2N+fp5gMEhDQ4Oyg+zatQtJkhgZ
      GcFoNJJOpzGZTNhsNiKRCOFwGIPBwMDAAABvvvkmnZ2dbNu2jRMnTpBIJOjq6uLNN9+ku7ub
      wcFBdu3aRaFQYHx8HEmSmJ2dpaurC1jaXSYmJvD5fBgMBkwmE4IgoNVqGR4eplQqUVNTg9fr
      VeyWl156CavVisvlor6+fmN/eFQVaEU2ui9QMplUjNvyAg6FQiSTSRwOB5Ik8corr3D48GEl
      rJ/P55UaA4PBQKlUUuIAZZvAarWSyWRIp9PkcjkleVGr1ZLP55EkCbvdroxRTtUOh8MIgkBz
      czNzc3PodDpSqRSTk5Mkk0keeughstks6XRaefpbLBZ0Op2ibqRSKRobG5mensbhcHD27Fn2
      7duHyWRicnISk8mETqcjmUzS2tqqPPg2UgVSBWAFNloARFEkk8lgs9mUOEA0GlXSG0qlErOz
      s9eMCVxOJBJBEATFLQrLI+tXLpJyCkUmkyGTyeBwOIhGo9TU1Kxq3nd6Y6yqVIFuhy54u9Fq
      tVelgASDQfr6+vD5fCSTSWZnZwkGg1itVubm5mhoaCAWi+HxeJiamqKtrY3x8XFkWcZsNuN0
      OllcXCSXy3HfffcxPDwMLAXe9Ho9kUgEr9fL7OwsVquVjz76iF27dhEKhRgdHWXTpk2rFoQ7
      laoUgHu1MZZer1eCVbBU0wtLO4Esy8RiMcbHx9m5cyczMzOkUinGx8fZvn07yWSSDz/8EJ/P
      x6VLl5Blmfb2dorFopKpazAYSCaTnD59GpPJRG1tLQsLCywsLCg77vj4OKFQiHA4jN1uv+sF
      YNUq0PXeVm6LoapAt0Y58GQ2m6+7nScSCU6fPs2hQ4fWNDaovUFvTgWSJU4e/5Da+ibCsTg2
      k5FsUcLrtFCUtLS1NK5psjfiXlSB4OqUXlmW6e/vx2AwIMuyUqASj8d5+OGH1zR2LBbD5XIB
      N06dvhalUkmxEcpMTU3R0NCwpsUai8VwOBzLehmVSqUbNkNOp9O3Lxs0GpohWygRTebwe10k
      0wWcFgOx6CIOX6NSPVWpNOZCoVBxIZAkaU2FJpc3gKrkuDei7Aot/5bhcJiFhQU0Gg2dnZ28
      88475PN5pqam2LdvH4ODg8iyTCQSIRAIkEwmqa+vV7o7SJJEJpPB6XTywQcf8NRTTzE/P09/
      f7/S+S2bzSr5ReUWKeU8fLvdjt1ux+VyMTs7y9zcHHv37uXYsWMIgsDs7Cwej4disUhnZycf
      f/wxmUwGn8+H0WhUFnwoFCKVSlFTU8Ps7KwShxBFEafTSTKZZGFhgUAgoMQrXC4XJpNJKYJx
      u920traueL+ux0oVYasSAHdNEw+6/EuuucUYm5rcxLMidQ31S1uLRoPmBpHDtVAOrFSStaoq
      q53DerVHh6XGVoFAAEmSGBgYIBAIKAu7XCo4OTmpRF3n5uaYmpriwIEDeDweTp06hc1mw2Qy
      MTExoUSbBwYGEASB+fl5JS05m81y4sQJtmzZwunTp5WktXw+T09PDzt37mRgYABZlhkbG1Ny
      eURR5OzZszidTpqampRi+oGBAXK5HJcuXaKrq0vpYpfP5xEEAYfDwcjICH6/n9HRUaUFSyQS
      YXFxUSn6qa+vZ2BggC9+8YtEIhHa2tpWvF93jRtUPR/g/9qilG/PlfWvZXXp8r+X/1++yeWn
      Xfn18meu9fqVcyhT/lv5c1eqaJe/R6PRkM/neeedd3j88ceXze/y6xEEgfHxcSU9wuFwKPk+
      l1/H5Z+ZnJykpqZmRdvwrmqLcq96ga4km80qT+tyiWa5EL3ck7P8WjKZZHh4mJGREWRZZnBw
      EK1Wq7y3/P75+XlSqZTy+pV/LxaLym4wNTXF0NCQEnSLx+PXnMfl5aNGo5Gnnnpq2fiXv6/8
      7/r6Je2hsbFRsQnKRTanT5/m7NmzlEol5TNtbW0Vd4xAlbpBVZaeev/zP/+D2WxWFndTU5OS
      7KbT6XjwwQd57733KBaLSjWYJEl0dHQwODio9OPRaDQ88cQT/OpXv6K9vZ1YLEYymcRsNlNT
      U0MikSCVSikVaHq9Xokc6/V6Ojo6ePnll2lrayMYDKLX63E4HAwPDysd3j71qU9x5MgRxY4o
      u18NBgOTk5N0dHTg9Xo5e/Ysfr8frVZLLpfj3Xffpba2lng8zpe+9CU0Go3SbTqdThMMBnG7
      3VitVsUuGxsb41Of+tQNg4KroSp3gHstF2glGhoalFSHckuSchFJTU0NTqcTo9GI1WrFaDSS
      TCaVgyvKqpTBYKCmpoZcLocoiszMzJDL5bDb7YqRenkbmrIuXyqVFK+LVqtVGt3a7XZsNpuS
      iFdugQIo3RrC4TCSJJHP57FarTidTtxuN7IsK+cYzM7Oks1m8fl8SrrGwsKC0qvU5/MpO4Qk
      SRSLRSXVo66ujlKpRCwWu+XfuCptgHs1DgDV3xrxWuPejjHLOUhlW/GusgFUllPWyQuFAseP
      HycSibCwsEA0Gr3m+z/++GNlwScSCaX2eC3IsszJkyev+56FhYVrvl5uwltmcXGRkydPLmuG
      K4oiZ86cWfV8BgYGOHfuHKFQCEDZ9W6VqrQBVBVoaQG+/PLLSlZnPB5ncXGRTCZDPB4nHo9j
      sVgwmUxKG8SyC7O3txdRFPl//+//KSqIxWIhkUjgdDoZGBigo6OD0dFRvva1r/H2229jsVg4
      efIkXV1d5PN5Dh8+zMzMDKFQiEQigV6v5+mnn+b73/8+7e3tpFIpLBYLhw8fVuyQUChEc3Mz
      O3bs4JNPPmFqaopHHnmEgYEBtFotr776qqJuPffcc4TDYY4cOaK0YtdoNDz77LO8+uqreDwe
      UqkUfr9fOSutvr6ekZERPve5z1XMS1iVAnAv9AVaDfX19coJMEajUWkt6HA48Pl8FItFJEla
      1sqko6ND8eZs3rxZWUC5XA6Hw0FtbS1msxmTyYTJZEKr1SoF6j09PVgsFurq6pT322w2mpqa
      FDdob28v9fX1FItFLBaLYvTm83nC4bDSUtFsNrN161YkSaKrq4uZmRn8fr9S1ilJklJMU1NT
      o0SUXS4XRqMRv9+PzWajvb2dqakptm7diizLNzxhZ62oNsAKqDbA6scVhKXzyMbGxujp6bml
      8SRJ4vz582zfvn1NmsBdlQ6tqkBLC6vsxiw/Uefn52lra1Oe/OXqrmrAbDbf8uKHpXvf29u7
      YY0RqlIAVBVoiddffx1BEKirq2NoaIj29nYuXLiA0Wgkk8mwefNm9u3bd7uneUejCkAV09vb
      SyAQIJ1O43Q6lVradDpNNpvF6/WuW5bkvUJVCsC91BdoJcpF7SrrS1UKgMoSsizzX//1X4TD
      Ydra2jh48KCi+2u1WqLRKMFgUGk9OD09TU1NjXKcqdfr5fz588zPz7N//36y2axiZHs8HiU+
      oNVqKRQKeL1e3njjDTZv3qxEj8tlmA888IDivSl7iI4cOcLWrVvx+/3L+gtpNBpcLhdnz54l
      FApx4MABCoUCNptNyQjVaDSYzWblQL5MJqN4p8perPK8yuncOp1O2Q0r5QZdlReomEszODCI
      1e0hkxWxmyCRFfG5bRRKMs2NDaoXqEJcmQ7tcrmUEkWtVsvg4CDbtm2jsbGR119/ncbGRiwW
      C8lkElmWWVxcJBAIMDk5yTe+8Q3eeustdDodWq2WYDCI2Wymq6sLSZI4fvw4NTU1GI1GFhYW
      eOqpp/joo48wm81KkM1gMCh5OMFgUBGcL3zhCxw5coRSqaQszmg0iiRJmM1mnnjiCd544w0l
      5396epqdO3cSCASYmJhgcHAQv9+P3+8nHA7jdruJRqPE43HcbjeRSEQ5e6GlpUVJjCufFrN/
      //5lv9u6eoG0BgNGvR5B0FLIJcjp7DgtOkLBWdw1bRUviKl0kcnNjHm7CmIuZ9u2bYRCIdxu
      t9KMqr6+HqfTiV6v56GHHlKOLCo3xE2lUhiNRlpaWtDr9UqD2XKLc5PJpGRf7tixA61WS2tr
      KxMTEzidTuVzHo8HWZapra1lbm4Op9NJR0cHkiQRjUYxGAxKzlBbWxszMzPK0ajlmEH5uy0W
      Cy0tLUptQ1tbm7JTffLJJ0qek8fjwel0ks/nlYzV8un1RqMRk8lEOp1Wegpdeb+uxy0dkVTI
      ppmYnsXv97EYSeD32EhkRTzOpRYeDqcTSW2PXhEu3wHKndRWu93H43GKxaJyftiV4wLLUp7L
      PYGufG/5IL1y709Aye4s35dkMql812rydspnFFyOJElKk93Lf0NZlpUAYPkzWq2WdDq9ott3
      XXcAg9nK5s2bAXC5lvrNOFyr+eTNca+0R78RJ06cIBAIkM/nqa2tJRaL0djYqLQ4L+vRiUSC
      zs5Ozp07R39/Pw8//DAWi0Vpklvu/hwKhejt7aVQKPCv//qvdHR0sG/fPrLZLMVikXw+j8vl
      Ip1Oc+LECR555BGSySR2u51CocDw8DC9vb20tLRw8uRJ0uk0mzdvVlqyGwwGpW44Eokouf9T
      U1M0NTUBS/UC5Sa+ZeHp6+tj27ZtCILA8PAw2WyWbDbLwsIC3d3dWK1WZmZmmJ2dpaenR1mL
      laAqjWDVC7RE+QkpSRJTU1PMzc2xa9curFYrb7/9Ns3NzdTU1DA0NITNZqO3t5dsNstHH32k
      NMZyOp2Mjo4qxSZbtmxBq9Wyfft2hoaGlN223GvoySefpLu7m+HhYRYWFtBqtZw4cYIDBw7Q
      19fH3r17FUPXZrPxySefKB2fy41wp6amGB0dZe/evYyNjVFXV0csFlOEqL29XTmOSZIkRkdH
      cbvdNDU1MTc3x9jYGFu3bkWv19Pf3082m6W3txeNRsP09LSS7lEJqjIVQlWBllSgy5vRGgwG
      CoUCLpdLqewSBEExIuvq6igUCooNUPa2lI9igqUoazwep6WlhWg0qrQyLDsdZFnGarUqPT/r
      6+sJBoOYTCblGNJ8Pq803jKbzWg0GhKJhNJysVAooNPpyOVyaDQagsEgTU1N2O12NBqNUs9c
      VqnK700kEnR0dCjJcpIkKddgtVqVJr9GoxGPx3OVAKitEW/AnSgAl7dGvHTpEm1tbctucrFY
      VIpbrkU+n2dhYUHpzV/uFp3JZAgEAmua0+W1xpdTrtiqZA139fUF2mBUFWiJ2dlZzp49y6ZN
      m5iammJ+fh6v10ssFkOSJFKpFB6Ph3A4TGtrK3NzczQ3N2O1WhkdHWXfvn0cP36cLVu2IAgC
      /f39yLLMzMwM+/fvJ5/PMz09jcvlolAoEIlEaGhoIBKJ4Ha7mZ+fx2QyEYvFcDqdis0BS4Zy
      e3s76XSacDisNPRKp9MkEgkOHjy4omBWE6oAVDGjo6NKN4RUKoVer2diYkIxVltbWxkcHMRo
      NPLJJ58oQaTh4WFOnDhBb2+v8pl4PK60VbFYLMoBfBMTE4pHJ5VKAUu7TXd3N4lEgunpaZxO
      JwsLC7jdbmZnZ2ltbeXixYu43W6lzNJgMDA9Pa0IxJYtW5R06WpGVYFW4HarQGt9CCSTST7+
      +GPuu+++a7oKRVHk1KlT1NXVXbOYPJVK8fHHH/PII4+seb7VUGap2gA34G4XgNWMC3dPTfCV
      3FU1wWo9gMpGUZUrTQ2EqWwUVSkAKiobRVV6gardc7DeXEtXvVXWywYoZ2xW+5grUZUCcC/3
      Bi03sF2P9vBQefvqRucJV8uYK6GqQCr3NKvaAYq5NCMjl7C53ERjSTxOC8msSMDrIJ8vUV9f
      W9FJ3esqkMrGsSoB0JtMaJFJpfPU1bpZjGRwmvVMT47ird+inhBzm4t3VsNKBSG3yp1+/asS
      gHw6jaTT4/c6CUfi+N1W4lmRtk09FIsF9YSY2zzX1bBeNsCdcv23lAxntDro6lpqSefz+QDw
      VnR6y1EDYSobRVWuNDUQprJRVKUAqKhsFFUpAKoKpLJRVOVKU1sjqmwUqgCo3NNUpQCoKpDK
      RlGVK03dAVQ2ClUAVO5pqlIAVBVIZaOoypWm7gAqG4UqACr3NFUpAGpfIJWNoioFQEVlo1hd
      QUw+w6XRcZw+L7FoCo/TRDwr4nc7KBSLBPz+ik5KVYFUNopVCYBOb8TusCGXChTFEumciFUn
      MDE2iLeh8gUx1VBkoRbErI47/fpXJQCZZJTFWIqagA+tkMagg1Reorl1M/l85QtidDrdbS+y
      UAtiVsedcv23VBBjdfrY7lwqhFlLW+2bRa0HUNkorvk4iEUinD97loJ4exai6gVS2SiuKQCL
      wWmmp4PkSqoAqNzdXFMABCGPVNLfNm+MqgKpbBRXCYAsy1gdHiSthFmv9udRuZZEJ9oAAByc
      SURBVLu5SgByqSgfnzlHNp2mKN2eHUCNA6hsFFcJgNnuYWt3Nzq5hHSbBEC1AVQ2iqsEIBud
      R29xYPb6MGhvT6aE2hpRZaO4aoWXigVOnDpHW72f/G1yg97L3aFVNparAmH2QBNffLrpdsxF
      RWXDkGWZqamp6jwfQFWBVNYLURS5dOkSExMTNDU1VacAqCqQSqWRJImhoSGmpqbYtGkTjz32
      GBqNpjoFQEWlUhQKBYaGhggGg2zatIknn3xyWUJcVQqAqgKp3CrZbJa+vj7i8Tjd3d10d3ff
      fDZoMZ/h0sgoFqeHaDyB12EhkRMJeJwUCkXq6ip7QoyqAqncLJlMhgsXLpBMJtm6dSt79uxB
      EIQV19TqCmJ0eiwOF1JJpK7m8hNiRtblhJhSqXTbiyzUgpjVUS3Xn0gkGBgYoFQq0dnZide7
      dIJFeeHfUkFMNp0kmUwRCPgIRxL4XFYS2RJtm7opFCpfEGMwGG57kYVaELM6bvf1RyIRLly4
      gEajobe3F7vdfs1MglsqiLE4PPT0eADw+Zbqf32rmt7NoWaDqlwPWZaJRCL09fWh0+nYuXPn
      igv/RlSlEayici1kWSYYDDI0NITNZmPPnj1YLJZbyh2rSgFQWyOqXI4sy0xPTzMwMIDP5+OB
      Bx7AZDJVZOyqFAA1HVoFlvT26elpLl26hM/n45FHHsFgMFT0O1QBUKk6RFFkdHSUqakpmpub
      OXjwYMUN7TJVKQCqCnRvUiqVGB4eZmJigk2bNvHoo4+ue1C0KgVA3QHuLXK5HCMjI4TDYVpb
      W3nssccqruqshCoAKreNTCbDxYsXicfjdHZ20tPTg0ajqXhg7XpUpQCoJZF3N+l0mosXL5JI
      JOju7mb37t237Z5XpQCo3H3Iskw8HmdwcHBZusLtfthVpQCoKtDdgyzLRKNRLly4gFarZevW
      rbhcrts9LYWqFIDb/VRQuXVkWWZxcZGBgQF0Oh07duzA6XTe7mldhSoAKhVFkiSCwSDDw8M4
      HA52796NxWK53dNakaoUADUZ7s5DkiRmZmYYHBzE6/VWNF1hPVmVAEhiiXAkjstmZHw6RF3A
      TTIn4nZYEUURm81W0UmpO8CdgyRJjI2NMTExgd/v5+DBgxiNxts9rVWzKgGQZZlcPku8mEQU
      dERiCQRZZiQ4gbumFYvFop4QU0HuhIKYUqmkdFdoaWnhwQcfVKK2tzr3qjshRhKLzM1M09LS
      Si45h9ZqIV8Cr6+GfD6DoPFWtCCmUCjc9iKTO7UgRpZlisXiUseDy8aoVEFMOV1hamqK9vZ2
      HnvssYo/8avuhBi90cIDD+wDoLa2svW/10JVgW4OURR54YUXSKfTlEolent72bdv3y3/nrIs
      k8/nGR4eJhwOs2nTJh5//PENj9quB1VpBKsCcHO8/fbbbN26le3btyPLMr/4xS/YvHkzPt/N
      1e/Jskwul6Ovr49YLEZPTw/btm27q+5PVQqA6gW6OWZmZjhw4ACw9BDp7OxkcnJyzQIgy7LS
      ViSVStHV1cV99923HlO+7VSlAKjcHJs2beLs2bM88MADyLLM+fPn+cM//MNVf16WZRKJBP39
      /UiSRFdXl9Jd4W6lKgVArQe4OQ4cOMBrr73Gj3/8Y2RZ5uDBg6uKvsqyTCwW49y5c2i1WrZv
      316VUdv1oCoFQFWBbg5BEPj85z+/6vfLskw4HGZgYACj0cju3bux2+3rOMPqoyoFQGVlcrkc
      k5OTzMzM0NjYSFtbGxqNBlmWGR8fp7W1lUQigd1uR6vVIooiCwsL+P3+Zb7w+fl5BgYGcLvd
      7N27946I2q4HVSkAam/QlTGZTJw9e5ba2lri8Tjf/e536e7uJpPJ4Ha7mZycJJ/PE4/H8Xg8
      LCwsoNPp8Pv9xGIxFhcXGRkZ4ctf/jIPPfQQY2NjHDlyhJ07d9Lc3HxXeXhWQ1UKgNob9Pp0
      dXXhcDiwWCwcOHAAr9dLPp+npaUFSZJIpVK43W6Gh4f54IMP+MpXvsLIyAhjY2Pcd999fPaz
      n6W+vp7XXnsNrVbL/fffz/vvv8/s7CwPPvjg7b68DaUqBUDl+mzfvl3596OPPrri+1wuFy6X
      i/HxcTo6OnjqqafQ6/XAUrQ9GAzyF3/xFwA8++yz/OhHP1IFoBpQVaBbo1QqMTQ0xPT0NO3t
      7Tz55JO3e0pVS1UKgKoC3Rz5fJ6BgQEikQgdHR1KugJc7VnT6/UEAgHefPNNtm/fztGjR+nt
      7b0d076tVKUAqKyNbDbLhQsXiMfj9PT00Nvbe0Njtuwy7e/v5/jx4+zevZvW1taNmXAVUZUC
      oAbCVkc6naa/v59sNktnZyeBQGDZwi8UCly4cIFt27ZdM7tSEAS2bt1KT08P6XT6nvMAwRrq
      AZLJFDariXAkgctuJpUTsVlMSJJYcR+yGgi7PrFYjL6+PgB6enpwuVzXXLyJRAKj0cjRo0cx
      m82YzWZkWSaTyeD1ellYWKCtrQ2dTsfw8DBbtmwhkUgQiUSwWCyIoojBYCASibB9+3YcDsdG
      X+q6syoBEIt5FiIRMgmBbKnEYiSKQSswX8hgddXQWGuo6KKVJKnidsBax1zt+zdyrrFYjPPn
      zyMIwrJ0hZV++1KpxMjICGazmTNnzvDQQw9hMBiw2WxEo1FOnTqFwWBA/n0tx7vvvksgEOCt
      t97iS1/6EgDhcJj3338frVbL3r17Vz3XW2G9xhQE4aqiLUFeRRlXqZDjfF8/HpeLRCaLQaej
      JIHVpEXSmGhrbkCSpIqpLvl8vuJFFqIorsm7NDQ0xJYtWyo+7uXkcjmy2Sxut3vFMWVZZmFh
      gcHBQUwmEz09PVit1lWNX7615ae+yWRCEARlIeRyOebm5qitrcVsNiv3MJ/PK7t6uRbAaDRe
      8zpv5fpXYj3GLAvAlTvlqnYAjU5PZ2cXBoORWlFEr9NQkkCnXQrB8/tBK6VDyrK8LvroWsa8
      1o9ViXFh6freeustJiYmsFqtxONx/uzP/uwqoZ+ZmWFgYACPx6OkK6z1GsqUhebyh5TNZmPz
      5s1Xfe5Ke+FG1Vm3+17dyrirEwCNVmltodMtSaZhHV31d3tjrEgkwvz8PF/96lcRBIHp6Wle
      e+01Dh8+jCzLTE1NMTo6is/nu+OKzO80VC/QbSAUCtHQ0KA8jWpqapQcnampKfx+Pw8//PCG
      dUi+l6lKAbjbd4C2tjZ+97vfKZ0UXnnlFVKpFJIk8fDDDyPL8qqKwsPhMIODg7S1tbG4uMjR
      o0cB2Lp1Kw899NA96dZcK6sygldDJQ2XTCZT8W5ia+00cC0jWJZlPvroI4aHh2lsbFzTYr2S
      8fFx/u3f/g1ZlnnwwQf5zGc+s6ytyI3G/OSTTzh79iy7d+/m1KlTzM3N8dd//ddoNBpef/11
      WlpaCAQCRKNRBEHA5/PhcrmU3TWXyyHLMmazec1zv5xq64qxErfUFWKjqVYV6I033sBut3P4
      8GGGh4d58cUXFXfhaslmswwNDRGNRvnGN75BQ0PDTV3vsWPH+MY3voFGoyESiXDx4kUkSUKr
      1bJ//36OHDnC/fffz8LCAlqtllQqRTAYRKvVksvlsNvtlEolstkszzzzzJq//26hKldatalA
      hUKBN954g9deew2v14vFYmHnzp2k02kKhcKqxshkMnzve9/jl7/8Jblcjs7OTnw+H3NzcyQS
      Cd577z2i0SixWGxV413upWppaSESiSjxgNHRUZqamrDb7dTU1OD3+3E6nWzfvp0tW7ZgsVgI
      BAI0NzffM6WPK1GVO8B6CoAkScRiMSRJwmq1KipA2d9tMpkoFotKIEaWZX72s59x6NAhOjo6
      lNSDXbt2KQ2orkcikWBoaIhcLkcgEGDPnj3K4RCiKOLz+ejv70eWZU6fPk0wGOTLX/7yDa+j
      ra2Nd999lz179hAOh2lqauIXv/gFOp0Oo9HIs88+i1arxe/3K9cNS7trW1ubMk5XV9dN/Y53
      C1VpA2Sz2VvWTa+krFfKsszHH3+MIAgYjUaCwSBOp5NSqYTNZmNiYoLa2lpCoRDZbJZDhw7x
      1ltv8dxzz3Hu3DlOnjzJ5OQknZ2dNDc3s2/fvqv01XKReV9fH4Ig0N3djdvtJhaLYTabWVhY
      YG5ujs2bN6PVakkkEkr7ElEU2bx58w114PJ1DA4O0tzczIEDBygUCkiShNlsvsoArlRnuJV+
      12of846yAdaTchTU5XIRi8VoaWlhamqKVCqFXq+nu7ubiYkJZmdnyWQy6PV6xWDs7e2lpqaG
      H//4xzz++OP4/f5lIfvyYRB9fX1oNBq2bdu27DCIcsS3qamJpqYm5XWHw0FjY6Py/xt1W4vF
      YhiNRnbs2LGsX8+9Wtd7K1SlAKy3DXBlTkupVMJoNNLe3g4s9ddpbGxUvEB2u53XXnuNhoYG
      jh8/zp//+Z8TCASWzXd+fp7h4WHMZjO7du2qeMfsMsVikZMnT6LX60mn0/T09FAsFllcXOS+
      ++5TKr5UVsc9pwKtlsvdoOWOC6FQiJ6eHsxmMx988AHz8/M0NjaSy+Vwu910d3dXZN7Xm2ux
      WOTo0aMIgoDD4UCSJC5dukQgEKClpWXFnH5VBbq2ClSVApDL5Sq+nZdKJbRaLWfPnuX48eMI
      gsCjjz66YsLbSslwsizz/PPPEwgEKBQKjI+Ps2/fPnbv3q3YGFfevPINLRvgbrd7mY4uyzKl
      Ukl5et9oAczPz2OxWJRMTlmWCYVCNDU1rbjAVQHYABug/DTq6Oi45XFWSzweX+bKi8Vi2Gy2
      a/6AY2NjDA4O8vWvfx1Jknj++efxer14PB7m5+eJxWK0t7evmIJQKpXo7+9nZGSEffv2Kdf5
      05/+FJ1OhyiKykJvbW1lZGSEdDpNPp9n9+7dRCIRRFEkEomg0WgoFototVokSSIajeLz+QiF
      QjQ2NhIMBq+ZfgxLqRNX0tLSsurfTOX/WJMASJJINpfHZDBQkmT0Oq2SSw4QjUYJhULKAiof
      l6PRaEgmk0rwRRAEJiYmeOaZZ665a6wlhD89Pc3AwAAGg4FUKkUmk6GlpYWhoSFaW1sVz4vJ
      ZGJwcJBPfepTaDQaNBoNhw4d4syZM6TTaYrFIl6vl9/85jf86Z/+6bLvKOfVT05O4vf72bx5
      M11dXQiCQC6XQ6PRYLPZWFhYUHzwx44dY//+/czPz1MoFAiHw0iShNfrZWBggNnZWbZs2UKh
      UKBUKmGxWAgGg9jtdj766CPGx8fZvXu32iBgnVmTChQOThBKyJi1JTIFEatJCzoLLY11SJLE
      3Nwc2WwWu91OOp0mm83icrmw2+1MTk6i0+mYn5/H6XQqHpdrbclrUYEGBgaAJd14YmICg8GA
      Tqfj+PHjHDp0CLfbzalTp7BYLEre++7duwH47W9/i9VqZWxsjD/6oz8ClsoMX3jhBfbv309b
      WxsjIyPMzc3R2tpKa2srGo2GX/3qV5jNZlpbW3n33Xd5/PHHleS2fD7PwsIC9fX1mEwmpqam
      FINZr9czNjaGzWZDo9HgcDjI5XLk83nsdruiPqVSKWU3qlQ+z3qpQHd6PcCaBCARWWBobBKr
      zYlBK1AsZDA7/DTVBygWi0Qiket+XpZlZmdnqaurU27Etb5+PWyA8gL4z//8T8XvL0kSe/fu
      ZXBwkMcee0yZz/PPP09jYyNGo5GOjg7q6uqu+uFGR0eZnZ1l69ateDyeis+10gu1/DtXOkFu
      Pea6kde/JgEoFXKEYyk8DgvpvITNYkQURYwmE6VikUwmU5HJrpcXqPyEzWazaDQaTCYTkiTx
      k5/8hC996UuYTCb+4z/+A5PJRHd396p64t9JT0BQd4BbEoDrUW1eIEmSeOuttxgdHVV85lar
      lVKpxFe+8hWlwLvsw/+Xf/kXTCYTn/70p9m7d6/iBcpms7z33nuIosjDDz98lX//TvGCqF6g
      a3uBqjIZrhIF9r/5zW/Q6XQ0NTXR19dHqVTiq1/9Kl/5yld44YUXlHSFDz74gPfff5+Ojg6e
      eOIJ9uzZo4yRz+f58Y9/TEdHBz09Pfz0pz8llUohy7LavOsuQfud73znO5UYSJblij1disXi
      miKa2WyWF154gaNHjxKJRGhra+NXv/oVsViM++67j/7+fvr6+jh06BAul4t3332XUqlEOBym
      VCrx9ttvo9fr+fDDD5mdnWXXrl1EIhH6+/vZuXMnW7ZsweVyUVdXx6lTp/D7/Rw5coSGhgZG
      RkZIpVIMDw+TTqcRRZHBwUG0Wi1DQ0PU1tauWe9WbYD1uf6bLorfaNaiSsmyzM9//nMOHz5M
      MBjk5z//OR999BGhUIi/+qu/4tSpUywuLmIwGPi7v/s7Dh48SDqdZs+ePQiCwLe+9S1++tOf
      otVqGRkZ4dvf/jaHDx8GltSFy3ejsh7Z19dHJBLhzJkz1NbWUigUcDgczM3NMTo6Sn19PWfO
      nGF8fJzOzs5Vd3FQ2XiqUgCup16USiWCwSB+vx+DwaAcBhGNRrl48SLf+973+Od//meGhob4
      9re/TW1tLbW1tRw/fpxMJsMHH3zA3//932OxWBgZGVn2Xe3t7RSLReUpsX//fn74wx8iCAJa
      rZZf//rXfP3rX0cURe6//37S6TRGo5HFxUUlEutyuTCbzTQ1NdHQ0KAmqFU5VSkAKzE5OcnL
      L79MW1sbr776KiaTiZqaGiXD8+mnn6ZQKDAxMcFnPvMZnn/+eUZGRnjuued4/PHH+eY3v8mL
      L76olFs2NjZSW1vLv/3bv/G5z31OifC6XC5CoRB6vZ6//Mu/5OjRo4iiyLe+9a1lHRoMBgOl
      Uumq7E4Ai8Vy1x8wdzdQlV6glRpj/eAHP+Dw4cMMDg7y/e9/H41Gw9atWzlz5gx1dXU89dRT
      9PX10dbWRjAYZPfu3fz3f/83Op2OJ554gkwmw86dO9m2bZsy5sWLF3nxxRcZHBzk4MGDfO1r
      X0Oj0ay6Mdad4gVRvUB3UD3AtVSgo0eP0tfXR3NzMy+99BJf+MIXMJlMPPvss7z44os4HA7e
      f/99EokE4XCYRx99lE9/+tOEw2HeffddLl26hM1muypW0d3dzd/8zd8AS8GteDyO2+0mmUyu
      2KCr7FJVufOpSgG4knw+T39/P08++SRbtmxhz549DA4OkkwmmZyc5KOPPsLn8/Htb38bo9HI
      Sy+9RE9PD+Pj47z99tt897vfxePxoNVq+fGPf8z999+/bHxBEMhms0SjUSwWC2fOnGFmZkZp
      F5hMJnG73crxQ5lMBlmW1zXvX2VjqEoB0Gg0nD9/nrm5Oe677z4kSUKn0+FwOPj3f/93+vr6
      iMfj5PN5pVnso48+qhSFfPOb3+TYsWNcunSJffv2EQgEblhlpdVqlYzQdDpNLpdjenoaWZYJ
      BAIMDg4yPT1Nc3Oz8pnp6el7vqb2TqcqbYDnn3+e5uZmzGaz4sb84IMPEEVRyeExm8243W4W
      FxfZsWMH3/nOd3jttdeUpDZYcpG+8sorOJ1Ourq6OHbsGDU1NRw4cOCq7yzn5Gs0GkRRXJbW
      fbk7tBzvEEURvV6vpEBXEtUGuIdtgHg8zuTkJL/+9a+JRqPk83mlj02hUCCdTuPz+WhpaeHR
      Rx9lfn4eURS5ePHiVdVQgiDwzDPPcO7cOY4ePcquXbuUsscrEQRBCb5ptVo0Gs2ym3DlD6em
      Kd8dVJUATExM8I//+I8cPXoUrVarqC2ZTIbOzk4+//nP8/LLLzM6OopWqyWdTnPkyBF27drF
      7OwsX/ziF68aUxAEduzYwdatWyv+VFG586maFSGKIj/84Q/55JNPMBqNdHZ2MjAwwOLiImaz
      mdnZWQKBADMzM+j1eqLRKNlslh/96Ec0NTWh0+nUXpgqa+amBGBqfIRoWsTnslIUoaW58cYf
      ugFlA7RUKlFTU4NGo6GlpUXR+zUaDX/7t39Ld3c3Op2Of/iHf6h4yrTKvcdNCYAs6HFZdSyG
      53EGmpUjbQqFAoIgLMu9vvLfsNyoLKs68XicYDBIIpHg0KFDRCIR5ubmKJVKeDweAoEAOp2O
      np4enn76aeWEk3JRePnpf3nS0+XfXSwWlV1ipXmU4w/l/pmZTGbZ65e/X6PRLCtmL8+j/Ppq
      5rTSPPL5PDqd7qo5XW8eV373lfOQZVnpHbraeVzru6/8d7k73mrmtJrfozzXcsvJtc5ppXlc
      zrJ53IwXKJOMEc+KuOxWRLGI1WZHugkvkCRJTE9PMzo6it/vJ5/P84Mf/IDh4WFEcenwvT/4
      gz/g6aefprGxEUmSMBqNN+XJqER36EqMuxpUL9Bd3halVCpx6dIlJicnaWpqor29fVlLkPn5
      eSKRCE1NTTidzoro9qoAqAJw292gpVKJ0dFRJicnaW5u5tChQ9c8j8rr9dLQ0LCRU1O5R9kQ
      AcjlcoyMjBAOh2ltbeWxxx677m5Rbe3RVe5e1lUAstksFy9eJBqN0tnZSU9Pz6q24DtJAFTX
      653NughAJpPh4sWLJJNJtmzZwq5du276eM/bSTgcRpZlpcf+taiWuarcHBUVgHg8zsWLFxFF
      kc7OTrxe7x29QObn55EkiUwmQyKRYGBgQGmAe/r0aXp7e4lEIpRKJUwm04qtDFWql4oJQC6X
      4/z582zduvWqk8/XSrWoQOVAmyAI1NbWIssyPp8Ps9lMW1sbpVKJZDJJa2urWh9wh1JRN2il
      nvbr1RluLS7AsbGxZUcJXYtcLkcul1t2CEYlULtCVGlnuBt9QaWe3HfKj7pe46oCsHHXXzEV
      6Fo9V26F9Vis63X86p0w1/USALizr7/qOsPJkki+UKRSVkA+lyVfKFAo5JEkmWw2e0tjy7JM
      oVhEEkvk8gUksUShWKKQzyHedEc7mWKhgCzLZNKp388zp3zHzSKJJbK5PKVigWJJpFjII4oS
      uWwW6aZ3a5lsJoMoir/vkieRyxcoFQsUitevult5yKUxS6JENptFECCbu/XrLxUL5PJ5Cvkc
      uXyBQj6PKC1df1kgqiYduszc9BThZJat3V1oNbf+tBoevIi/toHI4gJIMpJWS219G17nzWWS
      FnMZJmYXMGklkpkCOh3IgoBcEDHYHLS33ERmrAwzwyN4O9sZ6h8gEPCRSSUo6m3IpQLbujtv
      6smdSsaZmAxiNC+dXCOVZASNjFyScAQaaQjchO0iFgnOTZNL5SmaLDiMAulsHr1WgyTo6Nq8
      ac1DyrLE/OwkmXwRCR2yLKEXJES9BVkssa27c+3zBFKJGKOTQSx6GU+glsWFCIIggSzjqm2h
      zmuvvh1AksFsNFRoB5CwWW0Eg0FMZgtisYTFakUUb773qM5gRKeREREwGXUIWj06LeiNZgT5
      5se1Ws0UCwVMZgNzoSg2i4miBEbDzR96V8jn8dXWotPq0GkEDEYTSCJmixVJurneprIskhe1
      1DXVISUWSeRlTAY9Go0OnfbmH1hanR5BXppbsVjCajEhygIG/c0/owVBQK/VYrbaCAbnMJjM
      SOLSYSTl3KiKGcGVQioViCSyeD1Obv35LxOLLKK3OMinEzhcbmLRKF6f76bHLmTTzIcjeLxe
      8gURs16mJBiQ8hlMNidG/U2USsoy88FZdCYbpXwGrz9ANBrD47QSTxfwuBw3NddkPEIiXcDl
      sCBpDMj5DEabg1Q8hsvjvakdVi4VmJ6bx+Vyk85k8bntJDIFzHqBEnrs1rV772RZYmF+Hrvb
      RzoZx+12EY0lcNnMJHMl3E77mscESCdjZIsCRo0IejNiPoPF4SIZi+L2etEIQvUJgIrKRlJ1
      KpCKykaiCoDKPY0qACr3NKoAqNzTqAKgck+jCoDKPc3/Bz34WAPGFTcVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='State wise Profit' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
